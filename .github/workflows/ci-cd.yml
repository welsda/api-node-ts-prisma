name: Node.js CI/CD

# Quando rodar a pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Variáveis de ambiente globais para o job
    env:
      DATABASE_URL: "file:./prisma/dev.db"  # SQLite temporário para CI
      NODE_ENV: "test"
      JWT_SECRET: "secret_for_tests"        # necessário para gerar e validar tokens JWT nos testes

    steps:
      # 1️⃣ Pega o código do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configura Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3️⃣ Instala dependências
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Cria arquivo .env (opcional, Prisma pode ler)
      - name: Create .env
        run: echo "DATABASE_URL=file:./prisma/dev.db" > .env

      # 5️⃣ Gera Prisma Client
      - name: Generate Prisma client
        run: npx prisma generate

      # 6️⃣ Aplica migrations
      - name: Apply Prisma migrations
        run: npx prisma migrate deploy

      # 7️⃣ Roda os testes
      - name: Run tests
        run: npm test

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test   # roda só se os testes passarem

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t api-node-ts-prisma:latest .

      - name: Tag Docker image
        run: |
          docker tag api-node-ts-prisma:latest ${{ secrets.DOCKERHUB_USERNAME }}/api-node-ts-prisma:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-node-ts-prisma:latest